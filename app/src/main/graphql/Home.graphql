query GetTrendingMedia(
    $page: Int!,
    $pageSize: Int!,
    $type: MediaType!,
    $currentSeason: MediaSeason!,
    $nextSeason: MediaSeason!,
    $currentYear: Int!,
    $nextYear: Int!,
    $skipTrendingNow: Boolean = true,
    $skipPopularThisSeason: Boolean = true,
    $skipUpcomingNextSeason: Boolean = true,
    $skipAllTimePopular: Boolean = true,
    $skipTop100Anime: Boolean = true
){
    #       Default per page is 25, since the limit is 25
    trendingNow:
    Page(page: $page, perPage: $pageSize)@include(if: $skipTrendingNow) {
        media(sort: TRENDING_DESC, type:$type) {
            ...mediaTitleCover
        }
    }
    popularThisSeason:
    Page(page: $page, perPage: $pageSize)@include(if: $skipPopularThisSeason) {
        media(sort:POPULARITY_DESC, type: $type, season: $currentSeason, seasonYear: $currentYear) {
            ...mediaTitleCover
        }
    }
    upcomingNextSeason:
    Page(page: $page, perPage: $pageSize)@include(if: $skipUpcomingNextSeason) {
        media(sort: POPULARITY_DESC, type: $type, season: $nextSeason, seasonYear: $nextYear) {
            ...mediaTitleCover
        }
    }
    allTimePopular:
    Page(page: $page, perPage: $pageSize)@include(if: $skipAllTimePopular) {
        media(sort: POPULARITY_DESC, type:$type) {
            ...mediaTitleCover
        }
    }
    top100Anime:
    Page(page: $page, perPage: $pageSize)@include(if: $skipTop100Anime) {
        media(sort: SCORE_DESC, type: $type) {
            ...mediaTitleCover
        }
    }
}

query GetTrendingNow($mediaType: MediaType!, $page: Int!, $pageSize: Int!) {
    Page(page: $page, perPage: $pageSize) {
        media(sort: TRENDING_DESC, type: $mediaType) {
            ...mediaTitleCover
        }
    }
}

query GetPopularThisSeason($mediaType: MediaType = ANIME, $page: Int!, $pageSize: Int!, $currentSeason: MediaSeason!, $currentYear: Int!) {
    Page(page: $page, perPage: $pageSize, ) {
        media(sort:POPULARITY_DESC, type: $mediaType, season: $currentSeason, seasonYear: $currentYear) {
            ...mediaTitleCover
        }
    }
}

query GetUpComingNextSeason($mediaType: MediaType = ANIME, $page: Int!, $pageSize: Int!, $nextSeason: MediaSeason!, $nextYear: Int!) {
    Page(page: $page, perPage: $pageSize) {
        media(sort: POPULARITY_DESC, type: $mediaType, season: $nextSeason, seasonYear: $nextYear) {
            ...mediaTitleCover
        }
    }
}

query GetAllTimePopular($mediaType: MediaType!, $page: Int!, $pageSize: Int!) {
    Page(page: $page, perPage: $pageSize) {
        media(sort: POPULARITY_DESC, type: $mediaType) {
            ...mediaTitleCover
        }
    }
}

query GetTop100Anime($mediaType: MediaType!, $page: Int!, $pageSize: Int!) {
    Page(page: $page, perPage: $pageSize) {
        media(sort: SCORE_DESC, type: $mediaType) {
            ...mediaTitleCover
        }
    }
}

query GetPopularManhwa($page: Int!, $pageSize: Int!) {
    Page(page: $page, perPage: $pageSize) {
        media(sort: POPULARITY_DESC, type: MANGA, countryOfOrigin: KR) {
            ...mediaTitleCover
        }
    }
}

fragment mediaTitleCover on Media {
    id
    title {
        userPreferred
    }
    coverImage {
        extraLarge
    }
    type
}

query SearchMedia($page: Int!, $pageSize: Int!, $search: String!, $type: MediaType, $sort: [MediaSort] = SEARCH_MATCH, $genres: [String], $year: Int, $season: MediaSeason, $airingStatus: MediaStatus) {
    Page(page: $page, perPage: $pageSize) {
        media(search: $search, type: $type, sort: $sort, genre_in: $genres, seasonYear: $year, season: $season, status: $airingStatus) {
            id
            startDate {
                year
                month
                day
            }
            endDate {
                year
                month
                day
            }
            title {
                userPreferred
            }
            coverImage {
                extraLarge
            }
            type
            format
            episodes
            chapters
            volumes
            averageScore
            season
            seasonYear
        }
#        characters(search: $search, sort: [$characterSort]) {
#            id
#            name {
#                userPreferred
#            }
#            image {
#                large
#            }
#            favourites
#            isFavourite
#            isFavouriteBlocked
#        }
#        staff(search: $search) {
#            id
#            name {
#                userPreferred
#            }
#            favourites
#            image {
#                large
#            }
#            isFavourite
#            isFavouriteBlocked
#        }
#        studios(search: $search) {
#            id
#            name
#            favourites
#            isFavourite
#        }
#        threads(search: $search) {
#            id
#            title
#        }
#        users(search: $search) {
#            id
#            name
#        }
    }
}

query SearchCharacters($page: Int!, $pageSize: Int!, $search: String!, $sort: CharacterSort!) {
    Page(page: $page, perPage: $pageSize) {
        characters(search: $search, sort: [$sort]) {
            id
            name {
                userPreferred
            }
            image {
                large
            }
            favourites
            isFavourite
            isFavouriteBlocked
        }
    }
}

query SearchStaff($search: String!, $page: Int!, $pageSize: Int!) {
    Page(page: $page, perPage: $pageSize) {
        staff(search: $search) {
            id
            name {
                userPreferred
            }
            favourites
            image {
                large
            }
            isFavourite
            isFavouriteBlocked
        }
    }
}

query SearchStudios($search: String!, $page: Int!, $pageSize: Int!) {
    Page(page: $page, perPage: $pageSize) {
        studios(search: $search) {
            id
            name
            favourites
            isFavourite
        }
    }
}

query SearchThreads($search: String!, $page: Int!, $pageSize: Int!) {
    Page(page: $page, perPage: $pageSize) {
        threads(search: $search) {
            id
            title
        }
    }
}

query SearchUsers($search: String!, $page: Int!, $pageSize: Int!) {
    Page(page: $page, perPage: $pageSize) {
        users(search: $search) {
            id
            name
        }
    }
}